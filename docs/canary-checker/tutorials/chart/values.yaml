# Default values for canary-checker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicas: 1

image:
  repository: docker.io/flanksource/canary-checker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

dockerSocket: true
containerdSocket: false

# Set to true if you want to disable the postgrest service
disablePostgrest: false

# Turn on pprof /debug endpoint
debug: false
logLevel: "-v"

db:
  runMigrations: false
  embedded:
    # If the database is embedded, setting this to true will persist the contents of the database
    # through a persistent volume
    persist: true
    storageClass:
    storage:
  external:
    # Setting enabled to true will use a external postgres DB, disabling the embedded DB
    enabled: true
    # Setting create to true will create a postgres stateful set for config-db to connect to.
    # If create=true, the secretKeyRef will be created by helm with the specified name and key
    #   Optionally populate a secret named 'postgres-connection' before install with POSTGRES_USER and POSTGRES_PASSWORD to set the created username and password, otherwise a random password will be created for a 'postgres' user
    # If create=false, a prexisting secret containing the URI to an existing postgres database must be provided
    #   The URI must be in the format 'postgresql://"$user":"$password"@"$host"/"$database"'
      # Setting this to true will provision a new postgress DB for you
    create: true
    secretKeyRef:
      name: canary-checker-postgres
      # This is the key that either the secret will create(if create is true) or
      # this is the key it will look for in the secret(if secretRefKey is
      # mentioned). The name of the key is mandatory to set.
      key: DB_URL
    storageClass: default
    storage: 30Gi

nameOverride: ""

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  host: canary-checker.flanksource.com
  tls: 
   - secretName: chart-example-tls
     hosts:
       - canary-checker.flanksource.com

flanksource-ui:
  enabled: true
  nameOverride: "canary-checker-ui"
  fullnameOverride: "canary-checker-ui"
  oryKratosURL: ""
  # Mandatory.  Set to the name of the service installed by the chart (RFC1035 formatted $RELEASE_NAME)
  backendURL: "canary-checker"
  ingress:
    enabled: true
    host: canary-checker.flanksource.com
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    tls: 
     - secretName: chart-example-tls
       hosts:
         - canary-checker.flanksource.com

resources:
  requests:
    cpu: 200m
    memory: 200Mi
  limits:
    memory: 1512Mi

extra:
  # nodeSelector:
  #   key: value
  # tolerations:
  #   - key: "key1"
  #     operator: "Equal"
  #     value: "value1"
  #     effect: "NoSchedule"
  # affinity:
  #   nodeAffinity:
  #       requiredDuringSchedulingIgnoredDuringExecution:
  #         nodeSelectorTerms:
  #         - matchExpressions:
  #           - key: kubernetes.io/e2e-az-name
  #             operator: In
  #             values:
  #             - e2e-az1
  #             - e2e-az2
